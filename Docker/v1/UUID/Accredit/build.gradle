buildscript {
	ext {
		springBootVersion = '1.2.0.RELEASE'
		springRestDocsVersion = '1.0.0.RELEASE'
	}
	repositories {
		mavenLocal()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE')
	}
}

plugins {
	id "org.asciidoctor.convert" version "1.5.2"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'


version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenLocal()
	mavenCentral()
}


dependencies {
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.2'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.2'
	compile('org.apache.httpcomponents:httpclient:4.5.1')
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("io.springfox:springfox-swagger2:2.0.2")
	compile("io.springfox:springfox-swagger-ui:2.0.2")
	testCompile("junit:junit")
	compile("commons-codec:commons-codec:1.10")
	compile( "org.springframework.boot:spring-boot-starter-actuator")
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile('org.apache.commons:commons-io:1.3.2')
	compile('commons-lang:commons-lang:2.6')
	testCompile 'com.github.junitrunner:junitrunner-spring:0.0.2'
	testCompile 'org.springframework.boot:spring-boot-test:1.5.3.RELEASE'
	testCompile 'org.springframework:spring-test:4.3.8.RELEASE'
	compile 'io.grpc:grpc-all:0.13.2'
	compile 'commons-cli:commons-cli:1.3.1'
	compile 'org.hyperledger:shim-client:1.0'
	compile 'me.grapebaba:hyperledger-java-client:0.1.3'
	compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'
	compile 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.1'
	compile 'javassist:javassist:3.8.0.GA'
	compile 'org.apache.commons:commons-io:1.3.2'
}

task uberjar(type: Jar, dependsOn: [':compileJava', ':processResources']) {
	from files(sourceSets.main.output.classesDir)
	from configurations.runtime.asFileTree.files.collect { zipTree(it) }

	manifest {
		attributes 'Main-Class': 'info.smartkit.UUIDAccreditApplication'
	}
}
